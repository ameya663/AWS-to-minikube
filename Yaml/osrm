apiVersion: v1
kind: Service
metadata:
  name: osrm-routing-core
  labels:
    k8s-app: osrm-routing-core
spec:
  type: NodePort
  ports:
  - port: 31002
    targetPort: 5000
    protocol: TCP
    name: http
  selector:
    k8s-app: osrm-routing-core
---      
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: osrm-routing-core
  namespace: drt
  labels:
    k8s-app: osrm-routing-core
spec:
  selector:
    matchLabels:
      k8s-app: osrm-routing-core
  template:
    metadata:
      labels:
        k8s-app: osrm-routing-core  
    spec:        
      containers:
      - image: 312801333485.dkr.ecr.eu-central-1.amazonaws.com/rideshare/osrm-routing-core
        imagePullPolicy: IfNotPresent
        name: osrm-routing-core
        env:
        - name: NODE_ENV
          value: development
        - name: OSRM_GRAPH
          value: /usr/src/app/data/driving/driving.osrm 
        - name: STAGE
          value: development    
       # command: ['sh', '-c', 'echo The Bench Container 1 is Running && sleep ']
        
        volumeMounts:
        - mountPath: /usr/src/app/data/driving
          name: demo-volume

      initContainers:
      - image: 312801333485.dkr.ecr.eu-central-1.amazonaws.com/rideshare/osrm-data-graphs
        imagePullPolicy: IfNotPresent
        name: osrm-data-graphs
        
        command: ["/bin/sh"]
        args: ["-c", "cp -r /usr/src/graphs/driving/graph_2019_11_01/* /usr/src/graphs/OSRM; sleep 10"]

        
        volumeMounts:
        - mountPath: /usr/src/graphs/OSRM
          name: demo-volume
        
      volumes:
      - name: demo-volume
        emptyDir: {} 
      imagePullSecrets:
      - name: awsecr-cred               